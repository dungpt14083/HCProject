// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: InformationTournamentProto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from InformationTournamentProto.proto</summary>
public static partial class InformationTournamentProtoReflection {

  #region Descriptor
  /// <summary>File descriptor for InformationTournamentProto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static InformationTournamentProtoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiBJbmZvcm1hdGlvblRvdXJuYW1lbnRQcm90by5wcm90bxoMUmV3YXJkLnBy",
          "b3RvGglGZWUucHJvdG8i0AEKGkluZm9ybWF0aW9uVG91cm5hbWVudFByb3Rv",
          "EhYKDm5hbWVUb3VybmFtZW50GAEgASgJEhMKC251bWJlclJvdW5kGAIgASgF",
          "EhQKDG51bWJlclBsYXllchgDIAEoBRIaCglwcml6ZVBvb2wYBCADKAsyBy5S",
          "ZXdhcmQSEQoDZmVlGAUgAygLMgQuRmVlEhkKEW1pbmlHYW1lU2V0dGluZ0lk",
          "GAYgASgDEiUKDXJld2FyZFJhbmtpbmcYByADKAsyDi5SZXdhcmRSYW5raW5n",
          "IkwKDVJld2FyZFJhbmtpbmcSEQoJcmFuZ2VGcm9tGAEgASgFEg8KB3Jhbmdl",
          "VG8YAiABKAUSFwoGcmV3YXJkGAMgAygLMgcuUmV3YXJkYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::RewardReflection.Descriptor, global::FeeReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::InformationTournamentProto), global::InformationTournamentProto.Parser, new[]{ "NameTournament", "NumberRound", "NumberPlayer", "PrizePool", "Fee", "MiniGameSettingId", "RewardRanking" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RewardRanking), global::RewardRanking.Parser, new[]{ "RangeFrom", "RangeTo", "Reward" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class InformationTournamentProto : pb::IMessage<InformationTournamentProto>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InformationTournamentProto> _parser = new pb::MessageParser<InformationTournamentProto>(() => new InformationTournamentProto());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<InformationTournamentProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::InformationTournamentProtoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public InformationTournamentProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public InformationTournamentProto(InformationTournamentProto other) : this() {
    nameTournament_ = other.nameTournament_;
    numberRound_ = other.numberRound_;
    numberPlayer_ = other.numberPlayer_;
    prizePool_ = other.prizePool_.Clone();
    fee_ = other.fee_.Clone();
    miniGameSettingId_ = other.miniGameSettingId_;
    rewardRanking_ = other.rewardRanking_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public InformationTournamentProto Clone() {
    return new InformationTournamentProto(this);
  }

  /// <summary>Field number for the "nameTournament" field.</summary>
  public const int NameTournamentFieldNumber = 1;
  private string nameTournament_ = "";
  /// <summary>
  /// Tên tournament
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string NameTournament {
    get { return nameTournament_; }
    set {
      nameTournament_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "numberRound" field.</summary>
  public const int NumberRoundFieldNumber = 2;
  private int numberRound_;
  /// <summary>
  /// số lượng round
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumberRound {
    get { return numberRound_; }
    set {
      numberRound_ = value;
    }
  }

  /// <summary>Field number for the "numberPlayer" field.</summary>
  public const int NumberPlayerFieldNumber = 3;
  private int numberPlayer_;
  /// <summary>
  /// số lượng người chơi
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumberPlayer {
    get { return numberPlayer_; }
    set {
      numberPlayer_ = value;
    }
  }

  /// <summary>Field number for the "prizePool" field.</summary>
  public const int PrizePoolFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Reward> _repeated_prizePool_codec
      = pb::FieldCodec.ForMessage(34, global::Reward.Parser);
  private readonly pbc::RepeatedField<global::Reward> prizePool_ = new pbc::RepeatedField<global::Reward>();
  /// <summary>
  /// Tổng giải thưởng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Reward> PrizePool {
    get { return prizePool_; }
  }

  /// <summary>Field number for the "fee" field.</summary>
  public const int FeeFieldNumber = 5;
  private static readonly pb::FieldCodec<global::Fee> _repeated_fee_codec
      = pb::FieldCodec.ForMessage(42, global::Fee.Parser);
  private readonly pbc::RepeatedField<global::Fee> fee_ = new pbc::RepeatedField<global::Fee>();
  /// <summary>
  /// phí vào chơi
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Fee> Fee {
    get { return fee_; }
  }

  /// <summary>Field number for the "miniGameSettingId" field.</summary>
  public const int MiniGameSettingIdFieldNumber = 6;
  private long miniGameSettingId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long MiniGameSettingId {
    get { return miniGameSettingId_; }
    set {
      miniGameSettingId_ = value;
    }
  }

  /// <summary>Field number for the "rewardRanking" field.</summary>
  public const int RewardRankingFieldNumber = 7;
  private static readonly pb::FieldCodec<global::RewardRanking> _repeated_rewardRanking_codec
      = pb::FieldCodec.ForMessage(58, global::RewardRanking.Parser);
  private readonly pbc::RepeatedField<global::RewardRanking> rewardRanking_ = new pbc::RepeatedField<global::RewardRanking>();
  /// <summary>
  /// Danh sách phần thưởng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::RewardRanking> RewardRanking {
    get { return rewardRanking_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as InformationTournamentProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(InformationTournamentProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NameTournament != other.NameTournament) return false;
    if (NumberRound != other.NumberRound) return false;
    if (NumberPlayer != other.NumberPlayer) return false;
    if(!prizePool_.Equals(other.prizePool_)) return false;
    if(!fee_.Equals(other.fee_)) return false;
    if (MiniGameSettingId != other.MiniGameSettingId) return false;
    if(!rewardRanking_.Equals(other.rewardRanking_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (NameTournament.Length != 0) hash ^= NameTournament.GetHashCode();
    if (NumberRound != 0) hash ^= NumberRound.GetHashCode();
    if (NumberPlayer != 0) hash ^= NumberPlayer.GetHashCode();
    hash ^= prizePool_.GetHashCode();
    hash ^= fee_.GetHashCode();
    if (MiniGameSettingId != 0L) hash ^= MiniGameSettingId.GetHashCode();
    hash ^= rewardRanking_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (NameTournament.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NameTournament);
    }
    if (NumberRound != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(NumberRound);
    }
    if (NumberPlayer != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NumberPlayer);
    }
    prizePool_.WriteTo(output, _repeated_prizePool_codec);
    fee_.WriteTo(output, _repeated_fee_codec);
    if (MiniGameSettingId != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(MiniGameSettingId);
    }
    rewardRanking_.WriteTo(output, _repeated_rewardRanking_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (NameTournament.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(NameTournament);
    }
    if (NumberRound != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(NumberRound);
    }
    if (NumberPlayer != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NumberPlayer);
    }
    prizePool_.WriteTo(ref output, _repeated_prizePool_codec);
    fee_.WriteTo(ref output, _repeated_fee_codec);
    if (MiniGameSettingId != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(MiniGameSettingId);
    }
    rewardRanking_.WriteTo(ref output, _repeated_rewardRanking_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (NameTournament.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NameTournament);
    }
    if (NumberRound != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberRound);
    }
    if (NumberPlayer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberPlayer);
    }
    size += prizePool_.CalculateSize(_repeated_prizePool_codec);
    size += fee_.CalculateSize(_repeated_fee_codec);
    if (MiniGameSettingId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(MiniGameSettingId);
    }
    size += rewardRanking_.CalculateSize(_repeated_rewardRanking_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(InformationTournamentProto other) {
    if (other == null) {
      return;
    }
    if (other.NameTournament.Length != 0) {
      NameTournament = other.NameTournament;
    }
    if (other.NumberRound != 0) {
      NumberRound = other.NumberRound;
    }
    if (other.NumberPlayer != 0) {
      NumberPlayer = other.NumberPlayer;
    }
    prizePool_.Add(other.prizePool_);
    fee_.Add(other.fee_);
    if (other.MiniGameSettingId != 0L) {
      MiniGameSettingId = other.MiniGameSettingId;
    }
    rewardRanking_.Add(other.rewardRanking_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          NameTournament = input.ReadString();
          break;
        }
        case 16: {
          NumberRound = input.ReadInt32();
          break;
        }
        case 24: {
          NumberPlayer = input.ReadInt32();
          break;
        }
        case 34: {
          prizePool_.AddEntriesFrom(input, _repeated_prizePool_codec);
          break;
        }
        case 42: {
          fee_.AddEntriesFrom(input, _repeated_fee_codec);
          break;
        }
        case 48: {
          MiniGameSettingId = input.ReadInt64();
          break;
        }
        case 58: {
          rewardRanking_.AddEntriesFrom(input, _repeated_rewardRanking_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          NameTournament = input.ReadString();
          break;
        }
        case 16: {
          NumberRound = input.ReadInt32();
          break;
        }
        case 24: {
          NumberPlayer = input.ReadInt32();
          break;
        }
        case 34: {
          prizePool_.AddEntriesFrom(ref input, _repeated_prizePool_codec);
          break;
        }
        case 42: {
          fee_.AddEntriesFrom(ref input, _repeated_fee_codec);
          break;
        }
        case 48: {
          MiniGameSettingId = input.ReadInt64();
          break;
        }
        case 58: {
          rewardRanking_.AddEntriesFrom(ref input, _repeated_rewardRanking_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RewardRanking : pb::IMessage<RewardRanking>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RewardRanking> _parser = new pb::MessageParser<RewardRanking>(() => new RewardRanking());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<RewardRanking> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::InformationTournamentProtoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RewardRanking() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RewardRanking(RewardRanking other) : this() {
    rangeFrom_ = other.rangeFrom_;
    rangeTo_ = other.rangeTo_;
    reward_ = other.reward_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public RewardRanking Clone() {
    return new RewardRanking(this);
  }

  /// <summary>Field number for the "rangeFrom" field.</summary>
  public const int RangeFromFieldNumber = 1;
  private int rangeFrom_;
  /// <summary>
  /// thứ từ hạng từ
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RangeFrom {
    get { return rangeFrom_; }
    set {
      rangeFrom_ = value;
    }
  }

  /// <summary>Field number for the "rangeTo" field.</summary>
  public const int RangeToFieldNumber = 2;
  private int rangeTo_;
  /// <summary>
  /// thứ hạng đến
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RangeTo {
    get { return rangeTo_; }
    set {
      rangeTo_ = value;
    }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Reward> _repeated_reward_codec
      = pb::FieldCodec.ForMessage(26, global::Reward.Parser);
  private readonly pbc::RepeatedField<global::Reward> reward_ = new pbc::RepeatedField<global::Reward>();
  /// <summary>
  /// phần thưởng
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Reward> Reward {
    get { return reward_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as RewardRanking);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(RewardRanking other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RangeFrom != other.RangeFrom) return false;
    if (RangeTo != other.RangeTo) return false;
    if(!reward_.Equals(other.reward_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (RangeFrom != 0) hash ^= RangeFrom.GetHashCode();
    if (RangeTo != 0) hash ^= RangeTo.GetHashCode();
    hash ^= reward_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RangeFrom != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RangeFrom);
    }
    if (RangeTo != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RangeTo);
    }
    reward_.WriteTo(output, _repeated_reward_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RangeFrom != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RangeFrom);
    }
    if (RangeTo != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RangeTo);
    }
    reward_.WriteTo(ref output, _repeated_reward_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (RangeFrom != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RangeFrom);
    }
    if (RangeTo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RangeTo);
    }
    size += reward_.CalculateSize(_repeated_reward_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(RewardRanking other) {
    if (other == null) {
      return;
    }
    if (other.RangeFrom != 0) {
      RangeFrom = other.RangeFrom;
    }
    if (other.RangeTo != 0) {
      RangeTo = other.RangeTo;
    }
    reward_.Add(other.reward_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RangeFrom = input.ReadInt32();
          break;
        }
        case 16: {
          RangeTo = input.ReadInt32();
          break;
        }
        case 26: {
          reward_.AddEntriesFrom(input, _repeated_reward_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RangeFrom = input.ReadInt32();
          break;
        }
        case 16: {
          RangeTo = input.ReadInt32();
          break;
        }
        case 26: {
          reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
