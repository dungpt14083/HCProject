// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bonusgameplay.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BonusGamePlay {

  /// <summary>Holder for reflection information generated from bonusgameplay.proto</summary>
  public static partial class BonusgameplayReflection {

    #region Descriptor
    /// <summary>File descriptor for bonusgameplay.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BonusgameplayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNib251c2dhbWVwbGF5LnByb3RvEg1Cb251c0dhbWVQbGF5IisKC1BhY2th",
            "Z2VEYXRhEg4KBmhlYWRlchgBIAEoDRIMCgRkYXRhGAIgASgMIm8KBERhdGES",
            "GQoRYm9udXNHYW1lUmV3YXJkSWQYASABKAUSGwoTYm9udXNHYW1lUmV3YXJk",
            "TmFtZRgCIAEoCRIQCghxdWFudGl0eRgDIAEoBRIPCgdqYWNrcG90GAQgASgF",
            "EgwKBHR5cGUYBSABKAUi4wEKCFJlc3BvbnNlEg4KBnN0YXR1cxgBIAEoBRIh",
            "CgRkYXRhGAIgASgLMhMuQm9udXNHYW1lUGxheS5EYXRhEg8KB21lc3NhZ2UY",
            "AyABKAkSEAoIZ2FtZVR5cGUYBCABKAUSFgoOaXNVc2VkRnJlZVR1cm4YBSAB",
            "KAUSDQoFaW5kZXgYBiABKAUSFQoNZmVlVGlja2V0VXNlZBgHIAEoBRIWCg5m",
            "ZWVIY1Rva2VuVXNlZBgIIAEoBRITCgttZXNzYWdlVHlwZRgJIAEoBRIWCg50",
            "aW1lVG9OZXh0RnJlZRgKIAEoBSLoAQoMSXRlbVJlc3BvbnNlEiIKBWl0ZW1z",
            "GAEgAygLMhMuQm9udXNHYW1lUGxheS5EYXRhEg4KBnN0YXR1cxgCIAEoBRIP",
            "CgdtZXNzYWdlGAMgASgJEhAKCGdhbWVUeXBlGAQgASgFEhYKDmlzVXNlZEZy",
            "ZWVUdXJuGAUgASgFEg0KBWluZGV4GAYgASgFEhUKDWZlZVRpY2tldFVzZWQY",
            "ByABKAUSFgoOZmVlSGNUb2tlblVzZWQYCCABKAUSEwoLbWVzc2FnZVR5cGUY",
            "CSABKAUSFgoOdGltZVRvTmV4dEZyZWUYCiABKAUiiAEKC0RhdGFTY3JhdGNo",
            "EhkKEWJvbnVzR2FtZVJld2FyZElkGAEgASgFEhsKE2JvbnVzR2FtZVJld2Fy",
            "ZE5hbWUYAiABKAkSEAoIcXVhbnRpdHkYAyABKAUSDwoHamFja3BvdBgEIAEo",
            "BRIMCgR0eXBlGAUgASgFEhAKCGlzUmVzdWx0GAYgASgIIrYBChNMaXN0UmVz",
            "cG9uc2VTY3JhdGNoEg4KBnN0YXR1cxgBIAEoBRIoCgRkYXRhGAIgAygLMhou",
            "Qm9udXNHYW1lUGxheS5EYXRhU2NyYXRjaBIPCgdtZXNzYWdlGAMgASgJEhAK",
            "CGdhbWVUeXBlGAQgASgFEhMKC21lc3NhZ2VUeXBlGAUgASgFEhUKDWZlZVRp",
            "Y2tldFVzZWQYBiABKAUSFgoOZmVlSGNUb2tlblVzZWQYByABKAUitgEKE0l0",
            "ZW1SZXNwb25zZVNjcmF0Y2gSDgoGc3RhdHVzGAEgASgFEigKBGRhdGEYAiAB",
            "KAsyGi5Cb251c0dhbWVQbGF5LkRhdGFTY3JhdGNoEg8KB21lc3NhZ2UYAyAB",
            "KAkSEAoIZ2FtZVR5cGUYBCABKAUSEwoLbWVzc2FnZVR5cGUYBSABKAUSFQoN",
            "ZmVlVGlja2V0VXNlZBgGIAEoBRIWCg5mZWVIY1Rva2VuVXNlZBgHIAEoBSJL",
            "CghVc2VySW5mbxINCgV0b2tlbhgBIAEoCRIQCghkZXZpY2VJZBgCIAEoCRIN",
            "CgVlbWFpbBgDIAEoCRIPCgdwYXlUeXBlGAQgASgFIrABChNMaXN0UmV3YXJk",
            "UmFuZG9tQm94EiIKBWl0ZW1zGAEgAygLMhMuQm9udXNHYW1lUGxheS5EYXRh",
            "Eg4KBnN0YXR1cxgCIAEoBRIPCgdtZXNzYWdlGAMgASgJEhAKCGdhbWVUeXBl",
            "GAQgASgFEhUKDWZlZVRpY2tldFVzZWQYBSABKAUSFgoOZmVlSGNUb2tlblVz",
            "ZWQYBiABKAUSEwoLbWVzc2FnZVR5cGUYByABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.PackageData), global::BonusGamePlay.PackageData.Parser, new[]{ "Header", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.Data), global::BonusGamePlay.Data.Parser, new[]{ "BonusGameRewardId", "BonusGameRewardName", "Quantity", "Jackpot", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.Response), global::BonusGamePlay.Response.Parser, new[]{ "Status", "Data", "Message", "GameType", "IsUsedFreeTurn", "Index", "FeeTicketUsed", "FeeHcTokenUsed", "MessageType", "TimeToNextFree" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.ItemResponse), global::BonusGamePlay.ItemResponse.Parser, new[]{ "Items", "Status", "Message", "GameType", "IsUsedFreeTurn", "Index", "FeeTicketUsed", "FeeHcTokenUsed", "MessageType", "TimeToNextFree" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.DataScratch), global::BonusGamePlay.DataScratch.Parser, new[]{ "BonusGameRewardId", "BonusGameRewardName", "Quantity", "Jackpot", "Type", "IsResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.ListResponseScratch), global::BonusGamePlay.ListResponseScratch.Parser, new[]{ "Status", "Data", "Message", "GameType", "MessageType", "FeeTicketUsed", "FeeHcTokenUsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.ItemResponseScratch), global::BonusGamePlay.ItemResponseScratch.Parser, new[]{ "Status", "Data", "Message", "GameType", "MessageType", "FeeTicketUsed", "FeeHcTokenUsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.UserInfo), global::BonusGamePlay.UserInfo.Parser, new[]{ "Token", "DeviceId", "Email", "PayType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BonusGamePlay.ListRewardRandomBox), global::BonusGamePlay.ListRewardRandomBox.Parser, new[]{ "Items", "Status", "Message", "GameType", "FeeTicketUsed", "FeeHcTokenUsed", "MessageType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PackageData : pb::IMessage<PackageData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PackageData> _parser = new pb::MessageParser<PackageData>(() => new PackageData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PackageData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageData(PackageData other) : this() {
      header_ = other.header_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageData Clone() {
      return new PackageData(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private uint header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PackageData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PackageData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Header != other.Header) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Header != 0) hash ^= Header.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Header != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Header);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Header != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Header);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Header != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Header);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PackageData other) {
      if (other == null) {
        return;
      }
      if (other.Header != 0) {
        Header = other.Header;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Header = input.ReadUInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Header = input.ReadUInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Data : pb::IMessage<Data>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data(Data other) : this() {
      bonusGameRewardId_ = other.bonusGameRewardId_;
      bonusGameRewardName_ = other.bonusGameRewardName_;
      quantity_ = other.quantity_;
      jackpot_ = other.jackpot_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Data Clone() {
      return new Data(this);
    }

    /// <summary>Field number for the "bonusGameRewardId" field.</summary>
    public const int BonusGameRewardIdFieldNumber = 1;
    private int bonusGameRewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BonusGameRewardId {
      get { return bonusGameRewardId_; }
      set {
        bonusGameRewardId_ = value;
      }
    }

    /// <summary>Field number for the "bonusGameRewardName" field.</summary>
    public const int BonusGameRewardNameFieldNumber = 2;
    private string bonusGameRewardName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BonusGameRewardName {
      get { return bonusGameRewardName_; }
      set {
        bonusGameRewardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "jackpot" field.</summary>
    public const int JackpotFieldNumber = 4;
    private int jackpot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Jackpot {
      get { return jackpot_; }
      set {
        jackpot_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BonusGameRewardId != other.BonusGameRewardId) return false;
      if (BonusGameRewardName != other.BonusGameRewardName) return false;
      if (Quantity != other.Quantity) return false;
      if (Jackpot != other.Jackpot) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BonusGameRewardId != 0) hash ^= BonusGameRewardId.GetHashCode();
      if (BonusGameRewardName.Length != 0) hash ^= BonusGameRewardName.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Jackpot != 0) hash ^= Jackpot.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BonusGameRewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BonusGameRewardId);
      }
      if (BonusGameRewardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BonusGameRewardName);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (Jackpot != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Jackpot);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BonusGameRewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BonusGameRewardId);
      }
      if (BonusGameRewardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BonusGameRewardName);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (Jackpot != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Jackpot);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BonusGameRewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusGameRewardId);
      }
      if (BonusGameRewardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BonusGameRewardName);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (Jackpot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Jackpot);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Data other) {
      if (other == null) {
        return;
      }
      if (other.BonusGameRewardId != 0) {
        BonusGameRewardId = other.BonusGameRewardId;
      }
      if (other.BonusGameRewardName.Length != 0) {
        BonusGameRewardName = other.BonusGameRewardName;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Jackpot != 0) {
        Jackpot = other.Jackpot;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BonusGameRewardId = input.ReadInt32();
            break;
          }
          case 18: {
            BonusGameRewardName = input.ReadString();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 32: {
            Jackpot = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BonusGameRewardId = input.ReadInt32();
            break;
          }
          case 18: {
            BonusGameRewardName = input.ReadString();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 32: {
            Jackpot = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Response : pb::IMessage<Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Response(Response other) : this() {
      status_ = other.status_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      message_ = other.message_;
      gameType_ = other.gameType_;
      isUsedFreeTurn_ = other.isUsedFreeTurn_;
      index_ = other.index_;
      feeTicketUsed_ = other.feeTicketUsed_;
      feeHcTokenUsed_ = other.feeHcTokenUsed_;
      messageType_ = other.messageType_;
      timeToNextFree_ = other.timeToNextFree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::BonusGamePlay.Data data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::BonusGamePlay.Data Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 4;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "isUsedFreeTurn" field.</summary>
    public const int IsUsedFreeTurnFieldNumber = 5;
    private int isUsedFreeTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsUsedFreeTurn {
      get { return isUsedFreeTurn_; }
      set {
        isUsedFreeTurn_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 6;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "feeTicketUsed" field.</summary>
    public const int FeeTicketUsedFieldNumber = 7;
    private int feeTicketUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeTicketUsed {
      get { return feeTicketUsed_; }
      set {
        feeTicketUsed_ = value;
      }
    }

    /// <summary>Field number for the "feeHcTokenUsed" field.</summary>
    public const int FeeHcTokenUsedFieldNumber = 8;
    private int feeHcTokenUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeHcTokenUsed {
      get { return feeHcTokenUsed_; }
      set {
        feeHcTokenUsed_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 9;
    private int messageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "timeToNextFree" field.</summary>
    public const int TimeToNextFreeFieldNumber = 10;
    private int timeToNextFree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeToNextFree {
      get { return timeToNextFree_; }
      set {
        timeToNextFree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (Message != other.Message) return false;
      if (GameType != other.GameType) return false;
      if (IsUsedFreeTurn != other.IsUsedFreeTurn) return false;
      if (Index != other.Index) return false;
      if (FeeTicketUsed != other.FeeTicketUsed) return false;
      if (FeeHcTokenUsed != other.FeeHcTokenUsed) return false;
      if (MessageType != other.MessageType) return false;
      if (TimeToNextFree != other.TimeToNextFree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (IsUsedFreeTurn != 0) hash ^= IsUsedFreeTurn.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (FeeTicketUsed != 0) hash ^= FeeTicketUsed.GetHashCode();
      if (FeeHcTokenUsed != 0) hash ^= FeeHcTokenUsed.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (TimeToNextFree != 0) hash ^= TimeToNextFree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (IsUsedFreeTurn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IsUsedFreeTurn);
      }
      if (Index != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Index);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MessageType);
      }
      if (TimeToNextFree != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TimeToNextFree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (IsUsedFreeTurn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IsUsedFreeTurn);
      }
      if (Index != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Index);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MessageType);
      }
      if (TimeToNextFree != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TimeToNextFree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (IsUsedFreeTurn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsUsedFreeTurn);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (FeeTicketUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      if (TimeToNextFree != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeToNextFree);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::BonusGamePlay.Data();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.IsUsedFreeTurn != 0) {
        IsUsedFreeTurn = other.IsUsedFreeTurn;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.FeeTicketUsed != 0) {
        FeeTicketUsed = other.FeeTicketUsed;
      }
      if (other.FeeHcTokenUsed != 0) {
        FeeHcTokenUsed = other.FeeHcTokenUsed;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.TimeToNextFree != 0) {
        TimeToNextFree = other.TimeToNextFree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::BonusGamePlay.Data();
            }
            input.ReadMessage(Data);
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            IsUsedFreeTurn = input.ReadInt32();
            break;
          }
          case 48: {
            Index = input.ReadInt32();
            break;
          }
          case 56: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 64: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
          case 72: {
            MessageType = input.ReadInt32();
            break;
          }
          case 80: {
            TimeToNextFree = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::BonusGamePlay.Data();
            }
            input.ReadMessage(Data);
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            IsUsedFreeTurn = input.ReadInt32();
            break;
          }
          case 48: {
            Index = input.ReadInt32();
            break;
          }
          case 56: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 64: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
          case 72: {
            MessageType = input.ReadInt32();
            break;
          }
          case 80: {
            TimeToNextFree = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemResponse : pb::IMessage<ItemResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemResponse> _parser = new pb::MessageParser<ItemResponse>(() => new ItemResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemResponse(ItemResponse other) : this() {
      items_ = other.items_.Clone();
      status_ = other.status_;
      message_ = other.message_;
      gameType_ = other.gameType_;
      isUsedFreeTurn_ = other.isUsedFreeTurn_;
      index_ = other.index_;
      feeTicketUsed_ = other.feeTicketUsed_;
      feeHcTokenUsed_ = other.feeHcTokenUsed_;
      messageType_ = other.messageType_;
      timeToNextFree_ = other.timeToNextFree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemResponse Clone() {
      return new ItemResponse(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BonusGamePlay.Data> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::BonusGamePlay.Data.Parser);
    private readonly pbc::RepeatedField<global::BonusGamePlay.Data> items_ = new pbc::RepeatedField<global::BonusGamePlay.Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::BonusGamePlay.Data> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 4;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "isUsedFreeTurn" field.</summary>
    public const int IsUsedFreeTurnFieldNumber = 5;
    private int isUsedFreeTurn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IsUsedFreeTurn {
      get { return isUsedFreeTurn_; }
      set {
        isUsedFreeTurn_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 6;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "feeTicketUsed" field.</summary>
    public const int FeeTicketUsedFieldNumber = 7;
    private int feeTicketUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeTicketUsed {
      get { return feeTicketUsed_; }
      set {
        feeTicketUsed_ = value;
      }
    }

    /// <summary>Field number for the "feeHcTokenUsed" field.</summary>
    public const int FeeHcTokenUsedFieldNumber = 8;
    private int feeHcTokenUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeHcTokenUsed {
      get { return feeHcTokenUsed_; }
      set {
        feeHcTokenUsed_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 9;
    private int messageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "timeToNextFree" field.</summary>
    public const int TimeToNextFreeFieldNumber = 10;
    private int timeToNextFree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeToNextFree {
      get { return timeToNextFree_; }
      set {
        timeToNextFree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (GameType != other.GameType) return false;
      if (IsUsedFreeTurn != other.IsUsedFreeTurn) return false;
      if (Index != other.Index) return false;
      if (FeeTicketUsed != other.FeeTicketUsed) return false;
      if (FeeHcTokenUsed != other.FeeHcTokenUsed) return false;
      if (MessageType != other.MessageType) return false;
      if (TimeToNextFree != other.TimeToNextFree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (IsUsedFreeTurn != 0) hash ^= IsUsedFreeTurn.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (FeeTicketUsed != 0) hash ^= FeeTicketUsed.GetHashCode();
      if (FeeHcTokenUsed != 0) hash ^= FeeHcTokenUsed.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (TimeToNextFree != 0) hash ^= TimeToNextFree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (IsUsedFreeTurn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IsUsedFreeTurn);
      }
      if (Index != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Index);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MessageType);
      }
      if (TimeToNextFree != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TimeToNextFree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (IsUsedFreeTurn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IsUsedFreeTurn);
      }
      if (Index != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Index);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MessageType);
      }
      if (TimeToNextFree != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TimeToNextFree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (IsUsedFreeTurn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsUsedFreeTurn);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (FeeTicketUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      if (TimeToNextFree != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeToNextFree);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemResponse other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.IsUsedFreeTurn != 0) {
        IsUsedFreeTurn = other.IsUsedFreeTurn;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.FeeTicketUsed != 0) {
        FeeTicketUsed = other.FeeTicketUsed;
      }
      if (other.FeeHcTokenUsed != 0) {
        FeeHcTokenUsed = other.FeeHcTokenUsed;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.TimeToNextFree != 0) {
        TimeToNextFree = other.TimeToNextFree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            IsUsedFreeTurn = input.ReadInt32();
            break;
          }
          case 48: {
            Index = input.ReadInt32();
            break;
          }
          case 56: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 64: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
          case 72: {
            MessageType = input.ReadInt32();
            break;
          }
          case 80: {
            TimeToNextFree = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            IsUsedFreeTurn = input.ReadInt32();
            break;
          }
          case 48: {
            Index = input.ReadInt32();
            break;
          }
          case 56: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 64: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
          case 72: {
            MessageType = input.ReadInt32();
            break;
          }
          case 80: {
            TimeToNextFree = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DataScratch : pb::IMessage<DataScratch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataScratch> _parser = new pb::MessageParser<DataScratch>(() => new DataScratch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataScratch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataScratch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataScratch(DataScratch other) : this() {
      bonusGameRewardId_ = other.bonusGameRewardId_;
      bonusGameRewardName_ = other.bonusGameRewardName_;
      quantity_ = other.quantity_;
      jackpot_ = other.jackpot_;
      type_ = other.type_;
      isResult_ = other.isResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataScratch Clone() {
      return new DataScratch(this);
    }

    /// <summary>Field number for the "bonusGameRewardId" field.</summary>
    public const int BonusGameRewardIdFieldNumber = 1;
    private int bonusGameRewardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BonusGameRewardId {
      get { return bonusGameRewardId_; }
      set {
        bonusGameRewardId_ = value;
      }
    }

    /// <summary>Field number for the "bonusGameRewardName" field.</summary>
    public const int BonusGameRewardNameFieldNumber = 2;
    private string bonusGameRewardName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BonusGameRewardName {
      get { return bonusGameRewardName_; }
      set {
        bonusGameRewardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "jackpot" field.</summary>
    public const int JackpotFieldNumber = 4;
    private int jackpot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Jackpot {
      get { return jackpot_; }
      set {
        jackpot_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "isResult" field.</summary>
    public const int IsResultFieldNumber = 6;
    private bool isResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsResult {
      get { return isResult_; }
      set {
        isResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataScratch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataScratch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BonusGameRewardId != other.BonusGameRewardId) return false;
      if (BonusGameRewardName != other.BonusGameRewardName) return false;
      if (Quantity != other.Quantity) return false;
      if (Jackpot != other.Jackpot) return false;
      if (Type != other.Type) return false;
      if (IsResult != other.IsResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BonusGameRewardId != 0) hash ^= BonusGameRewardId.GetHashCode();
      if (BonusGameRewardName.Length != 0) hash ^= BonusGameRewardName.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Jackpot != 0) hash ^= Jackpot.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (IsResult != false) hash ^= IsResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BonusGameRewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BonusGameRewardId);
      }
      if (BonusGameRewardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BonusGameRewardName);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (Jackpot != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Jackpot);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (IsResult != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BonusGameRewardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BonusGameRewardId);
      }
      if (BonusGameRewardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BonusGameRewardName);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (Jackpot != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Jackpot);
      }
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Type);
      }
      if (IsResult != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BonusGameRewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusGameRewardId);
      }
      if (BonusGameRewardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BonusGameRewardName);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (Jackpot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Jackpot);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (IsResult != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataScratch other) {
      if (other == null) {
        return;
      }
      if (other.BonusGameRewardId != 0) {
        BonusGameRewardId = other.BonusGameRewardId;
      }
      if (other.BonusGameRewardName.Length != 0) {
        BonusGameRewardName = other.BonusGameRewardName;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Jackpot != 0) {
        Jackpot = other.Jackpot;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.IsResult != false) {
        IsResult = other.IsResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BonusGameRewardId = input.ReadInt32();
            break;
          }
          case 18: {
            BonusGameRewardName = input.ReadString();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 32: {
            Jackpot = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
          case 48: {
            IsResult = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BonusGameRewardId = input.ReadInt32();
            break;
          }
          case 18: {
            BonusGameRewardName = input.ReadString();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 32: {
            Jackpot = input.ReadInt32();
            break;
          }
          case 40: {
            Type = input.ReadInt32();
            break;
          }
          case 48: {
            IsResult = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListResponseScratch : pb::IMessage<ListResponseScratch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListResponseScratch> _parser = new pb::MessageParser<ListResponseScratch>(() => new ListResponseScratch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListResponseScratch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListResponseScratch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListResponseScratch(ListResponseScratch other) : this() {
      status_ = other.status_;
      data_ = other.data_.Clone();
      message_ = other.message_;
      gameType_ = other.gameType_;
      messageType_ = other.messageType_;
      feeTicketUsed_ = other.feeTicketUsed_;
      feeHcTokenUsed_ = other.feeHcTokenUsed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListResponseScratch Clone() {
      return new ListResponseScratch(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BonusGamePlay.DataScratch> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::BonusGamePlay.DataScratch.Parser);
    private readonly pbc::RepeatedField<global::BonusGamePlay.DataScratch> data_ = new pbc::RepeatedField<global::BonusGamePlay.DataScratch>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::BonusGamePlay.DataScratch> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 4;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 5;
    private int messageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "feeTicketUsed" field.</summary>
    public const int FeeTicketUsedFieldNumber = 6;
    private int feeTicketUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeTicketUsed {
      get { return feeTicketUsed_; }
      set {
        feeTicketUsed_ = value;
      }
    }

    /// <summary>Field number for the "feeHcTokenUsed" field.</summary>
    public const int FeeHcTokenUsedFieldNumber = 7;
    private int feeHcTokenUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeHcTokenUsed {
      get { return feeHcTokenUsed_; }
      set {
        feeHcTokenUsed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListResponseScratch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListResponseScratch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if(!data_.Equals(other.data_)) return false;
      if (Message != other.Message) return false;
      if (GameType != other.GameType) return false;
      if (MessageType != other.MessageType) return false;
      if (FeeTicketUsed != other.FeeTicketUsed) return false;
      if (FeeHcTokenUsed != other.FeeHcTokenUsed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= data_.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (FeeTicketUsed != 0) hash ^= FeeTicketUsed.GetHashCode();
      if (FeeHcTokenUsed != 0) hash ^= FeeHcTokenUsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (MessageType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MessageType);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (MessageType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MessageType);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      if (FeeTicketUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeHcTokenUsed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListResponseScratch other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      data_.Add(other.data_);
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.FeeTicketUsed != 0) {
        FeeTicketUsed = other.FeeTicketUsed;
      }
      if (other.FeeHcTokenUsed != 0) {
        FeeHcTokenUsed = other.FeeHcTokenUsed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            MessageType = input.ReadInt32();
            break;
          }
          case 48: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 56: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            MessageType = input.ReadInt32();
            break;
          }
          case 48: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 56: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemResponseScratch : pb::IMessage<ItemResponseScratch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemResponseScratch> _parser = new pb::MessageParser<ItemResponseScratch>(() => new ItemResponseScratch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemResponseScratch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemResponseScratch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemResponseScratch(ItemResponseScratch other) : this() {
      status_ = other.status_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      message_ = other.message_;
      gameType_ = other.gameType_;
      messageType_ = other.messageType_;
      feeTicketUsed_ = other.feeTicketUsed_;
      feeHcTokenUsed_ = other.feeHcTokenUsed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemResponseScratch Clone() {
      return new ItemResponseScratch(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::BonusGamePlay.DataScratch data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::BonusGamePlay.DataScratch Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 4;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 5;
    private int messageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "feeTicketUsed" field.</summary>
    public const int FeeTicketUsedFieldNumber = 6;
    private int feeTicketUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeTicketUsed {
      get { return feeTicketUsed_; }
      set {
        feeTicketUsed_ = value;
      }
    }

    /// <summary>Field number for the "feeHcTokenUsed" field.</summary>
    public const int FeeHcTokenUsedFieldNumber = 7;
    private int feeHcTokenUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeHcTokenUsed {
      get { return feeHcTokenUsed_; }
      set {
        feeHcTokenUsed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemResponseScratch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemResponseScratch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (Message != other.Message) return false;
      if (GameType != other.GameType) return false;
      if (MessageType != other.MessageType) return false;
      if (FeeTicketUsed != other.FeeTicketUsed) return false;
      if (FeeHcTokenUsed != other.FeeHcTokenUsed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (FeeTicketUsed != 0) hash ^= FeeTicketUsed.GetHashCode();
      if (FeeHcTokenUsed != 0) hash ^= FeeHcTokenUsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (MessageType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MessageType);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (MessageType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MessageType);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      if (FeeTicketUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeHcTokenUsed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemResponseScratch other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::BonusGamePlay.DataScratch();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.FeeTicketUsed != 0) {
        FeeTicketUsed = other.FeeTicketUsed;
      }
      if (other.FeeHcTokenUsed != 0) {
        FeeHcTokenUsed = other.FeeHcTokenUsed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::BonusGamePlay.DataScratch();
            }
            input.ReadMessage(Data);
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            MessageType = input.ReadInt32();
            break;
          }
          case 48: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 56: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            if (data_ == null) {
              Data = new global::BonusGamePlay.DataScratch();
            }
            input.ReadMessage(Data);
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            MessageType = input.ReadInt32();
            break;
          }
          case 48: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 56: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserInfo : pb::IMessage<UserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserInfo(UserInfo other) : this() {
      token_ = other.token_;
      deviceId_ = other.deviceId_;
      email_ = other.email_;
      payType_ = other.payType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payType" field.</summary>
    public const int PayTypeFieldNumber = 4;
    private int payType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PayType {
      get { return payType_; }
      set {
        payType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (DeviceId != other.DeviceId) return false;
      if (Email != other.Email) return false;
      if (PayType != other.PayType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (PayType != 0) hash ^= PayType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (PayType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PayType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (PayType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PayType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (PayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PayType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.PayType != 0) {
        PayType = other.PayType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 32: {
            PayType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 32: {
            PayType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListRewardRandomBox : pb::IMessage<ListRewardRandomBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRewardRandomBox> _parser = new pb::MessageParser<ListRewardRandomBox>(() => new ListRewardRandomBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListRewardRandomBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BonusGamePlay.BonusgameplayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListRewardRandomBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListRewardRandomBox(ListRewardRandomBox other) : this() {
      items_ = other.items_.Clone();
      status_ = other.status_;
      message_ = other.message_;
      gameType_ = other.gameType_;
      feeTicketUsed_ = other.feeTicketUsed_;
      feeHcTokenUsed_ = other.feeHcTokenUsed_;
      messageType_ = other.messageType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListRewardRandomBox Clone() {
      return new ListRewardRandomBox(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BonusGamePlay.Data> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::BonusGamePlay.Data.Parser);
    private readonly pbc::RepeatedField<global::BonusGamePlay.Data> items_ = new pbc::RepeatedField<global::BonusGamePlay.Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::BonusGamePlay.Data> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameType" field.</summary>
    public const int GameTypeFieldNumber = 4;
    private int gameType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GameType {
      get { return gameType_; }
      set {
        gameType_ = value;
      }
    }

    /// <summary>Field number for the "feeTicketUsed" field.</summary>
    public const int FeeTicketUsedFieldNumber = 5;
    private int feeTicketUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeTicketUsed {
      get { return feeTicketUsed_; }
      set {
        feeTicketUsed_ = value;
      }
    }

    /// <summary>Field number for the "feeHcTokenUsed" field.</summary>
    public const int FeeHcTokenUsedFieldNumber = 6;
    private int feeHcTokenUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FeeHcTokenUsed {
      get { return feeHcTokenUsed_; }
      set {
        feeHcTokenUsed_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 7;
    private int messageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListRewardRandomBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListRewardRandomBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (GameType != other.GameType) return false;
      if (FeeTicketUsed != other.FeeTicketUsed) return false;
      if (FeeHcTokenUsed != other.FeeHcTokenUsed) return false;
      if (MessageType != other.MessageType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (GameType != 0) hash ^= GameType.GetHashCode();
      if (FeeTicketUsed != 0) hash ^= FeeTicketUsed.GetHashCode();
      if (FeeHcTokenUsed != 0) hash ^= FeeHcTokenUsed.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MessageType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (GameType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameType);
      }
      if (FeeTicketUsed != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MessageType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (GameType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameType);
      }
      if (FeeTicketUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeTicketUsed);
      }
      if (FeeHcTokenUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeeHcTokenUsed);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListRewardRandomBox other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.GameType != 0) {
        GameType = other.GameType;
      }
      if (other.FeeTicketUsed != 0) {
        FeeTicketUsed = other.FeeTicketUsed;
      }
      if (other.FeeHcTokenUsed != 0) {
        FeeHcTokenUsed = other.FeeHcTokenUsed;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 48: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
          case 56: {
            MessageType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 32: {
            GameType = input.ReadInt32();
            break;
          }
          case 40: {
            FeeTicketUsed = input.ReadInt32();
            break;
          }
          case 48: {
            FeeHcTokenUsed = input.ReadInt32();
            break;
          }
          case 56: {
            MessageType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
