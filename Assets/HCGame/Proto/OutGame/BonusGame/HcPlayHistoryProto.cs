// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: HcPlayHistoryProto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from HcPlayHistoryProto.proto</summary>
public static partial class HcPlayHistoryProtoReflection {

  #region Descriptor
  /// <summary>File descriptor for HcPlayHistoryProto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static HcPlayHistoryProtoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhIY1BsYXlIaXN0b3J5UHJvdG8ucHJvdG8aCUZlZS5wcm90bxoMUmV3YXJk",
          "LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIrUFChJI",
          "Y1BsYXlIaXN0b3J5UHJvdG8SEgoKbWluaUdhbWVJZBgBIAEoAxISCgptb2Rl",
          "R2FtZUlkGAIgASgFEg4KBnJlc3VsdBgDIAEoBRITCgtzdGF0dXNNYXRjaBgE",
          "IAEoBRItCgl0aW1lU3RhcnQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
          "ZXN0YW1wEisKB3RpbWVFbmQYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
          "ZXN0YW1wEi4KCnRpbWVSZWZ1bmQYByABKAsyGi5nb29nbGUucHJvdG9idWYu",
          "VGltZXN0YW1wEhEKCWlzRW5kVG91chgIIAEoCBIPCgdpc0NsYWltGAkgASgF",
          "EikKBHVzZXIYCiABKAsyGy5MaXN0SGNQbGF5SGlzdG9yeVVzZXJQcm90bxIR",
          "CgNmZWUYCyABKAsyBC5GZWUSGwoGcmV3YXJkGAwgASgLMgsuTGlzdFJld2Fy",
          "ZBIRCglpZEhpc3RvcnkYDSABKAUSDgoGcm9vbUlkGA4gASgDEhUKDXRvdXJu",
          "YW1lbnRUb3AYDyABKAMSFQoNaGNHcm91cFJvb21JZBgQIAEoCRIXCg9taW5p",
          "R2FtZUV2ZW50SWQYESABKAMSFAoMbnVtYmVyUGxheWVyGBIgASgFEhcKD251",
          "bWJlclBsYXllck5vdxgTIAEoBRIUCgxtaW5pR2FtZU5hbWUYFCABKAkSEAoI",
          "bW9kZU5hbWUYFSABKAkSEAoIaXNSZWZ1bmQYFiABKAgSFQoNaXNVc2VySW5F",
          "dmVudBgXIAEoCBITCgtpc0V2ZW50VGltZRgYIAEoCBIxCg10aW1lTm93U2Vy",
          "dmVyGBkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIVCg1yZWNl",
          "aXZlUmVmdW5kGBogASgIIk0KFkhjUGxheUhpc3RvcnlVc2VyUHJvdG8SEgoK",
          "YXZhdGFyVXNlchgBIAEoCRIQCgh1c2VyTmFtZRgCIAEoCRINCgVzY29yZRgD",
          "IAEoAyJZChpMaXN0SGNQbGF5SGlzdG9yeVVzZXJQcm90bxI7ChpsaXN0SGNQ",
          "bGF5SGlzdG9yeVVzZXJQcm90bxgBIAMoCzIXLkhjUGxheUhpc3RvcnlVc2Vy",
          "UHJvdG8iTQoWTGlzdEhjUGxheUhpc3RvcnlQcm90bxIzChZsaXN0SGNQbGF5",
          "SGlzdG9yeVByb3RvGAEgAygLMhMuSGNQbGF5SGlzdG9yeVByb3RvYgZwcm90",
          "bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::FeeReflection.Descriptor, global::RewardReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::HcPlayHistoryProto), global::HcPlayHistoryProto.Parser, new[]{ "MiniGameId", "ModeGameId", "Result", "StatusMatch", "TimeStart", "TimeEnd", "TimeRefund", "IsEndTour", "IsClaim", "User", "Fee", "Reward", "IdHistory", "RoomId", "TournamentTop", "HcGroupRoomId", "MiniGameEventId", "NumberPlayer", "NumberPlayerNow", "MiniGameName", "ModeName", "IsRefund", "IsUserInEvent", "IsEventTime", "TimeNowServer", "ReceiveRefund" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::HcPlayHistoryUserProto), global::HcPlayHistoryUserProto.Parser, new[]{ "AvatarUser", "UserName", "Score" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ListHcPlayHistoryUserProto), global::ListHcPlayHistoryUserProto.Parser, new[]{ "ListHcPlayHistoryUserProto_" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ListHcPlayHistoryProto), global::ListHcPlayHistoryProto.Parser, new[]{ "ListHcPlayHistoryProto_" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class HcPlayHistoryProto : pb::IMessage<HcPlayHistoryProto>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<HcPlayHistoryProto> _parser = new pb::MessageParser<HcPlayHistoryProto>(() => new HcPlayHistoryProto());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<HcPlayHistoryProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::HcPlayHistoryProtoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public HcPlayHistoryProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public HcPlayHistoryProto(HcPlayHistoryProto other) : this() {
    miniGameId_ = other.miniGameId_;
    modeGameId_ = other.modeGameId_;
    result_ = other.result_;
    statusMatch_ = other.statusMatch_;
    timeStart_ = other.timeStart_ != null ? other.timeStart_.Clone() : null;
    timeEnd_ = other.timeEnd_ != null ? other.timeEnd_.Clone() : null;
    timeRefund_ = other.timeRefund_ != null ? other.timeRefund_.Clone() : null;
    isEndTour_ = other.isEndTour_;
    isClaim_ = other.isClaim_;
    user_ = other.user_ != null ? other.user_.Clone() : null;
    fee_ = other.fee_ != null ? other.fee_.Clone() : null;
    reward_ = other.reward_ != null ? other.reward_.Clone() : null;
    idHistory_ = other.idHistory_;
    roomId_ = other.roomId_;
    tournamentTop_ = other.tournamentTop_;
    hcGroupRoomId_ = other.hcGroupRoomId_;
    miniGameEventId_ = other.miniGameEventId_;
    numberPlayer_ = other.numberPlayer_;
    numberPlayerNow_ = other.numberPlayerNow_;
    miniGameName_ = other.miniGameName_;
    modeName_ = other.modeName_;
    isRefund_ = other.isRefund_;
    isUserInEvent_ = other.isUserInEvent_;
    isEventTime_ = other.isEventTime_;
    timeNowServer_ = other.timeNowServer_ != null ? other.timeNowServer_.Clone() : null;
    receiveRefund_ = other.receiveRefund_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public HcPlayHistoryProto Clone() {
    return new HcPlayHistoryProto(this);
  }

  /// <summary>Field number for the "miniGameId" field.</summary>
  public const int MiniGameIdFieldNumber = 1;
  private long miniGameId_;
  /// <summary>
  ///miniGameId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long MiniGameId {
    get { return miniGameId_; }
    set {
      miniGameId_ = value;
    }
  }

  /// <summary>Field number for the "modeGameId" field.</summary>
  public const int ModeGameIdFieldNumber = 2;
  private int modeGameId_;
  /// <summary>
  ///modeGameId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ModeGameId {
    get { return modeGameId_; }
    set {
      modeGameId_ = value;
    }
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 3;
  private int result_;
  /// <summary>
  ///ket qua thang thua  1:thua 2:thang
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "statusMatch" field.</summary>
  public const int StatusMatchFieldNumber = 4;
  private int statusMatch_;
  /// <summary>
  ///trang thai tran dau 1 :Inprocess,2 : player2 playing  ,3 :Finish ,-1: cancle
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int StatusMatch {
    get { return statusMatch_; }
    set {
      statusMatch_ = value;
    }
  }

  /// <summary>Field number for the "timeStart" field.</summary>
  public const int TimeStartFieldNumber = 5;
  private global::Google.Protobuf.WellKnownTypes.Timestamp timeStart_;
  /// <summary>
  /// Thoi gian bat dau
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Google.Protobuf.WellKnownTypes.Timestamp TimeStart {
    get { return timeStart_; }
    set {
      timeStart_ = value;
    }
  }

  /// <summary>Field number for the "timeEnd" field.</summary>
  public const int TimeEndFieldNumber = 6;
  private global::Google.Protobuf.WellKnownTypes.Timestamp timeEnd_;
  /// <summary>
  ///Thoi gian ket thuc
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Google.Protobuf.WellKnownTypes.Timestamp TimeEnd {
    get { return timeEnd_; }
    set {
      timeEnd_ = value;
    }
  }

  /// <summary>Field number for the "timeRefund" field.</summary>
  public const int TimeRefundFieldNumber = 7;
  private global::Google.Protobuf.WellKnownTypes.Timestamp timeRefund_;
  /// <summary>
  /// Thoi gian neu co refund
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Google.Protobuf.WellKnownTypes.Timestamp TimeRefund {
    get { return timeRefund_; }
    set {
      timeRefund_ = value;
    }
  }

  /// <summary>Field number for the "isEndTour" field.</summary>
  public const int IsEndTourFieldNumber = 8;
  private bool isEndTour_;
  /// <summary>
  ///trang thai ket thuc tour
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsEndTour {
    get { return isEndTour_; }
    set {
      isEndTour_ = value;
    }
  }

  /// <summary>Field number for the "isClaim" field.</summary>
  public const int IsClaimFieldNumber = 9;
  private int isClaim_;
  /// <summary>
  ///da nhan thuong hay khong . claim = 1 , 0 : chua claim
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int IsClaim {
    get { return isClaim_; }
    set {
      isClaim_ = value;
    }
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 10;
  private global::ListHcPlayHistoryUserProto user_;
  /// <summary>
  ///information of user
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ListHcPlayHistoryUserProto User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  /// <summary>Field number for the "fee" field.</summary>
  public const int FeeFieldNumber = 11;
  private global::Fee fee_;
  /// <summary>
  /// fee  type 1: gold , 2: token , 3:ticket
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Fee Fee {
    get { return fee_; }
    set {
      fee_ = value;
    }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 12;
  private global::ListReward reward_;
  /// <summary>
  /// reward 1: gold , 2: token , 3:ticket, 4 :xp
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ListReward Reward {
    get { return reward_; }
    set {
      reward_ = value;
    }
  }

  /// <summary>Field number for the "idHistory" field.</summary>
  public const int IdHistoryFieldNumber = 13;
  private int idHistory_;
  /// <summary>
  /// id cua idHistory
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int IdHistory {
    get { return idHistory_; }
    set {
      idHistory_ = value;
    }
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 14;
  private long roomId_;
  /// <summary>
  /// roomId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long RoomId {
    get { return roomId_; }
    set {
      roomId_ = value;
    }
  }

  /// <summary>Field number for the "tournamentTop" field.</summary>
  public const int TournamentTopFieldNumber = 15;
  private long tournamentTop_;
  /// <summary>
  /// top cua tournamentTop hien tai
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long TournamentTop {
    get { return tournamentTop_; }
    set {
      tournamentTop_ = value;
    }
  }

  /// <summary>Field number for the "hcGroupRoomId" field.</summary>
  public const int HcGroupRoomIdFieldNumber = 16;
  private string hcGroupRoomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HcGroupRoomId {
    get { return hcGroupRoomId_; }
    set {
      hcGroupRoomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "miniGameEventId" field.</summary>
  public const int MiniGameEventIdFieldNumber = 17;
  private long miniGameEventId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long MiniGameEventId {
    get { return miniGameEventId_; }
    set {
      miniGameEventId_ = value;
    }
  }

  /// <summary>Field number for the "numberPlayer" field.</summary>
  public const int NumberPlayerFieldNumber = 18;
  private int numberPlayer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumberPlayer {
    get { return numberPlayer_; }
    set {
      numberPlayer_ = value;
    }
  }

  /// <summary>Field number for the "numberPlayerNow" field.</summary>
  public const int NumberPlayerNowFieldNumber = 19;
  private int numberPlayerNow_;
  /// <summary>
  ///number player in tourament now
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumberPlayerNow {
    get { return numberPlayerNow_; }
    set {
      numberPlayerNow_ = value;
    }
  }

  /// <summary>Field number for the "miniGameName" field.</summary>
  public const int MiniGameNameFieldNumber = 20;
  private string miniGameName_ = "";
  /// <summary>
  ///name of minigame
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MiniGameName {
    get { return miniGameName_; }
    set {
      miniGameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "modeName" field.</summary>
  public const int ModeNameFieldNumber = 21;
  private string modeName_ = "";
  /// <summary>
  ///name of mode (exp head to head)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ModeName {
    get { return modeName_; }
    set {
      modeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "isRefund" field.</summary>
  public const int IsRefundFieldNumber = 22;
  private bool isRefund_;
  /// <summary>
  /// được refund không 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsRefund {
    get { return isRefund_; }
    set {
      isRefund_ = value;
    }
  }

  /// <summary>Field number for the "isUserInEvent" field.</summary>
  public const int IsUserInEventFieldNumber = 23;
  private bool isUserInEvent_;
  /// <summary>
  ///user còn trong sự kiện đó không
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsUserInEvent {
    get { return isUserInEvent_; }
    set {
      isUserInEvent_ = value;
    }
  }

  /// <summary>Field number for the "isEventTime" field.</summary>
  public const int IsEventTimeFieldNumber = 24;
  private bool isEventTime_;
  /// <summary>
  /// Is the event time still available?
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsEventTime {
    get { return isEventTime_; }
    set {
      isEventTime_ = value;
    }
  }

  /// <summary>Field number for the "timeNowServer" field.</summary>
  public const int TimeNowServerFieldNumber = 25;
  private global::Google.Protobuf.WellKnownTypes.Timestamp timeNowServer_;
  /// <summary>
  /// time now server
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Google.Protobuf.WellKnownTypes.Timestamp TimeNowServer {
    get { return timeNowServer_; }
    set {
      timeNowServer_ = value;
    }
  }

  /// <summary>Field number for the "receiveRefund" field.</summary>
  public const int ReceiveRefundFieldNumber = 26;
  private bool receiveRefund_;
  /// <summary>
  /// da nhan refund hay chua
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ReceiveRefund {
    get { return receiveRefund_; }
    set {
      receiveRefund_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as HcPlayHistoryProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(HcPlayHistoryProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MiniGameId != other.MiniGameId) return false;
    if (ModeGameId != other.ModeGameId) return false;
    if (Result != other.Result) return false;
    if (StatusMatch != other.StatusMatch) return false;
    if (!object.Equals(TimeStart, other.TimeStart)) return false;
    if (!object.Equals(TimeEnd, other.TimeEnd)) return false;
    if (!object.Equals(TimeRefund, other.TimeRefund)) return false;
    if (IsEndTour != other.IsEndTour) return false;
    if (IsClaim != other.IsClaim) return false;
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(Fee, other.Fee)) return false;
    if (!object.Equals(Reward, other.Reward)) return false;
    if (IdHistory != other.IdHistory) return false;
    if (RoomId != other.RoomId) return false;
    if (TournamentTop != other.TournamentTop) return false;
    if (HcGroupRoomId != other.HcGroupRoomId) return false;
    if (MiniGameEventId != other.MiniGameEventId) return false;
    if (NumberPlayer != other.NumberPlayer) return false;
    if (NumberPlayerNow != other.NumberPlayerNow) return false;
    if (MiniGameName != other.MiniGameName) return false;
    if (ModeName != other.ModeName) return false;
    if (IsRefund != other.IsRefund) return false;
    if (IsUserInEvent != other.IsUserInEvent) return false;
    if (IsEventTime != other.IsEventTime) return false;
    if (!object.Equals(TimeNowServer, other.TimeNowServer)) return false;
    if (ReceiveRefund != other.ReceiveRefund) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (MiniGameId != 0L) hash ^= MiniGameId.GetHashCode();
    if (ModeGameId != 0) hash ^= ModeGameId.GetHashCode();
    if (Result != 0) hash ^= Result.GetHashCode();
    if (StatusMatch != 0) hash ^= StatusMatch.GetHashCode();
    if (timeStart_ != null) hash ^= TimeStart.GetHashCode();
    if (timeEnd_ != null) hash ^= TimeEnd.GetHashCode();
    if (timeRefund_ != null) hash ^= TimeRefund.GetHashCode();
    if (IsEndTour != false) hash ^= IsEndTour.GetHashCode();
    if (IsClaim != 0) hash ^= IsClaim.GetHashCode();
    if (user_ != null) hash ^= User.GetHashCode();
    if (fee_ != null) hash ^= Fee.GetHashCode();
    if (reward_ != null) hash ^= Reward.GetHashCode();
    if (IdHistory != 0) hash ^= IdHistory.GetHashCode();
    if (RoomId != 0L) hash ^= RoomId.GetHashCode();
    if (TournamentTop != 0L) hash ^= TournamentTop.GetHashCode();
    if (HcGroupRoomId.Length != 0) hash ^= HcGroupRoomId.GetHashCode();
    if (MiniGameEventId != 0L) hash ^= MiniGameEventId.GetHashCode();
    if (NumberPlayer != 0) hash ^= NumberPlayer.GetHashCode();
    if (NumberPlayerNow != 0) hash ^= NumberPlayerNow.GetHashCode();
    if (MiniGameName.Length != 0) hash ^= MiniGameName.GetHashCode();
    if (ModeName.Length != 0) hash ^= ModeName.GetHashCode();
    if (IsRefund != false) hash ^= IsRefund.GetHashCode();
    if (IsUserInEvent != false) hash ^= IsUserInEvent.GetHashCode();
    if (IsEventTime != false) hash ^= IsEventTime.GetHashCode();
    if (timeNowServer_ != null) hash ^= TimeNowServer.GetHashCode();
    if (ReceiveRefund != false) hash ^= ReceiveRefund.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MiniGameId != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(MiniGameId);
    }
    if (ModeGameId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ModeGameId);
    }
    if (Result != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Result);
    }
    if (StatusMatch != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(StatusMatch);
    }
    if (timeStart_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(TimeStart);
    }
    if (timeEnd_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(TimeEnd);
    }
    if (timeRefund_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(TimeRefund);
    }
    if (IsEndTour != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsEndTour);
    }
    if (IsClaim != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(IsClaim);
    }
    if (user_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(User);
    }
    if (fee_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(Fee);
    }
    if (reward_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(Reward);
    }
    if (IdHistory != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(IdHistory);
    }
    if (RoomId != 0L) {
      output.WriteRawTag(112);
      output.WriteInt64(RoomId);
    }
    if (TournamentTop != 0L) {
      output.WriteRawTag(120);
      output.WriteInt64(TournamentTop);
    }
    if (HcGroupRoomId.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(HcGroupRoomId);
    }
    if (MiniGameEventId != 0L) {
      output.WriteRawTag(136, 1);
      output.WriteInt64(MiniGameEventId);
    }
    if (NumberPlayer != 0) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(NumberPlayer);
    }
    if (NumberPlayerNow != 0) {
      output.WriteRawTag(152, 1);
      output.WriteInt32(NumberPlayerNow);
    }
    if (MiniGameName.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(MiniGameName);
    }
    if (ModeName.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(ModeName);
    }
    if (IsRefund != false) {
      output.WriteRawTag(176, 1);
      output.WriteBool(IsRefund);
    }
    if (IsUserInEvent != false) {
      output.WriteRawTag(184, 1);
      output.WriteBool(IsUserInEvent);
    }
    if (IsEventTime != false) {
      output.WriteRawTag(192, 1);
      output.WriteBool(IsEventTime);
    }
    if (timeNowServer_ != null) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(TimeNowServer);
    }
    if (ReceiveRefund != false) {
      output.WriteRawTag(208, 1);
      output.WriteBool(ReceiveRefund);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MiniGameId != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(MiniGameId);
    }
    if (ModeGameId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ModeGameId);
    }
    if (Result != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Result);
    }
    if (StatusMatch != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(StatusMatch);
    }
    if (timeStart_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(TimeStart);
    }
    if (timeEnd_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(TimeEnd);
    }
    if (timeRefund_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(TimeRefund);
    }
    if (IsEndTour != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsEndTour);
    }
    if (IsClaim != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(IsClaim);
    }
    if (user_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(User);
    }
    if (fee_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(Fee);
    }
    if (reward_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(Reward);
    }
    if (IdHistory != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(IdHistory);
    }
    if (RoomId != 0L) {
      output.WriteRawTag(112);
      output.WriteInt64(RoomId);
    }
    if (TournamentTop != 0L) {
      output.WriteRawTag(120);
      output.WriteInt64(TournamentTop);
    }
    if (HcGroupRoomId.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(HcGroupRoomId);
    }
    if (MiniGameEventId != 0L) {
      output.WriteRawTag(136, 1);
      output.WriteInt64(MiniGameEventId);
    }
    if (NumberPlayer != 0) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(NumberPlayer);
    }
    if (NumberPlayerNow != 0) {
      output.WriteRawTag(152, 1);
      output.WriteInt32(NumberPlayerNow);
    }
    if (MiniGameName.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(MiniGameName);
    }
    if (ModeName.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(ModeName);
    }
    if (IsRefund != false) {
      output.WriteRawTag(176, 1);
      output.WriteBool(IsRefund);
    }
    if (IsUserInEvent != false) {
      output.WriteRawTag(184, 1);
      output.WriteBool(IsUserInEvent);
    }
    if (IsEventTime != false) {
      output.WriteRawTag(192, 1);
      output.WriteBool(IsEventTime);
    }
    if (timeNowServer_ != null) {
      output.WriteRawTag(202, 1);
      output.WriteMessage(TimeNowServer);
    }
    if (ReceiveRefund != false) {
      output.WriteRawTag(208, 1);
      output.WriteBool(ReceiveRefund);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (MiniGameId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(MiniGameId);
    }
    if (ModeGameId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModeGameId);
    }
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
    }
    if (StatusMatch != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusMatch);
    }
    if (timeStart_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeStart);
    }
    if (timeEnd_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeEnd);
    }
    if (timeRefund_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRefund);
    }
    if (IsEndTour != false) {
      size += 1 + 1;
    }
    if (IsClaim != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsClaim);
    }
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (fee_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fee);
    }
    if (reward_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
    }
    if (IdHistory != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdHistory);
    }
    if (RoomId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoomId);
    }
    if (TournamentTop != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TournamentTop);
    }
    if (HcGroupRoomId.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(HcGroupRoomId);
    }
    if (MiniGameEventId != 0L) {
      size += 2 + pb::CodedOutputStream.ComputeInt64Size(MiniGameEventId);
    }
    if (NumberPlayer != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumberPlayer);
    }
    if (NumberPlayerNow != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumberPlayerNow);
    }
    if (MiniGameName.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(MiniGameName);
    }
    if (ModeName.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(ModeName);
    }
    if (IsRefund != false) {
      size += 2 + 1;
    }
    if (IsUserInEvent != false) {
      size += 2 + 1;
    }
    if (IsEventTime != false) {
      size += 2 + 1;
    }
    if (timeNowServer_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimeNowServer);
    }
    if (ReceiveRefund != false) {
      size += 2 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(HcPlayHistoryProto other) {
    if (other == null) {
      return;
    }
    if (other.MiniGameId != 0L) {
      MiniGameId = other.MiniGameId;
    }
    if (other.ModeGameId != 0) {
      ModeGameId = other.ModeGameId;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    if (other.StatusMatch != 0) {
      StatusMatch = other.StatusMatch;
    }
    if (other.timeStart_ != null) {
      if (timeStart_ == null) {
        TimeStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
      }
      TimeStart.MergeFrom(other.TimeStart);
    }
    if (other.timeEnd_ != null) {
      if (timeEnd_ == null) {
        TimeEnd = new global::Google.Protobuf.WellKnownTypes.Timestamp();
      }
      TimeEnd.MergeFrom(other.TimeEnd);
    }
    if (other.timeRefund_ != null) {
      if (timeRefund_ == null) {
        TimeRefund = new global::Google.Protobuf.WellKnownTypes.Timestamp();
      }
      TimeRefund.MergeFrom(other.TimeRefund);
    }
    if (other.IsEndTour != false) {
      IsEndTour = other.IsEndTour;
    }
    if (other.IsClaim != 0) {
      IsClaim = other.IsClaim;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        User = new global::ListHcPlayHistoryUserProto();
      }
      User.MergeFrom(other.User);
    }
    if (other.fee_ != null) {
      if (fee_ == null) {
        Fee = new global::Fee();
      }
      Fee.MergeFrom(other.Fee);
    }
    if (other.reward_ != null) {
      if (reward_ == null) {
        Reward = new global::ListReward();
      }
      Reward.MergeFrom(other.Reward);
    }
    if (other.IdHistory != 0) {
      IdHistory = other.IdHistory;
    }
    if (other.RoomId != 0L) {
      RoomId = other.RoomId;
    }
    if (other.TournamentTop != 0L) {
      TournamentTop = other.TournamentTop;
    }
    if (other.HcGroupRoomId.Length != 0) {
      HcGroupRoomId = other.HcGroupRoomId;
    }
    if (other.MiniGameEventId != 0L) {
      MiniGameEventId = other.MiniGameEventId;
    }
    if (other.NumberPlayer != 0) {
      NumberPlayer = other.NumberPlayer;
    }
    if (other.NumberPlayerNow != 0) {
      NumberPlayerNow = other.NumberPlayerNow;
    }
    if (other.MiniGameName.Length != 0) {
      MiniGameName = other.MiniGameName;
    }
    if (other.ModeName.Length != 0) {
      ModeName = other.ModeName;
    }
    if (other.IsRefund != false) {
      IsRefund = other.IsRefund;
    }
    if (other.IsUserInEvent != false) {
      IsUserInEvent = other.IsUserInEvent;
    }
    if (other.IsEventTime != false) {
      IsEventTime = other.IsEventTime;
    }
    if (other.timeNowServer_ != null) {
      if (timeNowServer_ == null) {
        TimeNowServer = new global::Google.Protobuf.WellKnownTypes.Timestamp();
      }
      TimeNowServer.MergeFrom(other.TimeNowServer);
    }
    if (other.ReceiveRefund != false) {
      ReceiveRefund = other.ReceiveRefund;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MiniGameId = input.ReadInt64();
          break;
        }
        case 16: {
          ModeGameId = input.ReadInt32();
          break;
        }
        case 24: {
          Result = input.ReadInt32();
          break;
        }
        case 32: {
          StatusMatch = input.ReadInt32();
          break;
        }
        case 42: {
          if (timeStart_ == null) {
            TimeStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeStart);
          break;
        }
        case 50: {
          if (timeEnd_ == null) {
            TimeEnd = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeEnd);
          break;
        }
        case 58: {
          if (timeRefund_ == null) {
            TimeRefund = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeRefund);
          break;
        }
        case 64: {
          IsEndTour = input.ReadBool();
          break;
        }
        case 72: {
          IsClaim = input.ReadInt32();
          break;
        }
        case 82: {
          if (user_ == null) {
            User = new global::ListHcPlayHistoryUserProto();
          }
          input.ReadMessage(User);
          break;
        }
        case 90: {
          if (fee_ == null) {
            Fee = new global::Fee();
          }
          input.ReadMessage(Fee);
          break;
        }
        case 98: {
          if (reward_ == null) {
            Reward = new global::ListReward();
          }
          input.ReadMessage(Reward);
          break;
        }
        case 104: {
          IdHistory = input.ReadInt32();
          break;
        }
        case 112: {
          RoomId = input.ReadInt64();
          break;
        }
        case 120: {
          TournamentTop = input.ReadInt64();
          break;
        }
        case 130: {
          HcGroupRoomId = input.ReadString();
          break;
        }
        case 136: {
          MiniGameEventId = input.ReadInt64();
          break;
        }
        case 144: {
          NumberPlayer = input.ReadInt32();
          break;
        }
        case 152: {
          NumberPlayerNow = input.ReadInt32();
          break;
        }
        case 162: {
          MiniGameName = input.ReadString();
          break;
        }
        case 170: {
          ModeName = input.ReadString();
          break;
        }
        case 176: {
          IsRefund = input.ReadBool();
          break;
        }
        case 184: {
          IsUserInEvent = input.ReadBool();
          break;
        }
        case 192: {
          IsEventTime = input.ReadBool();
          break;
        }
        case 202: {
          if (timeNowServer_ == null) {
            TimeNowServer = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeNowServer);
          break;
        }
        case 208: {
          ReceiveRefund = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MiniGameId = input.ReadInt64();
          break;
        }
        case 16: {
          ModeGameId = input.ReadInt32();
          break;
        }
        case 24: {
          Result = input.ReadInt32();
          break;
        }
        case 32: {
          StatusMatch = input.ReadInt32();
          break;
        }
        case 42: {
          if (timeStart_ == null) {
            TimeStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeStart);
          break;
        }
        case 50: {
          if (timeEnd_ == null) {
            TimeEnd = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeEnd);
          break;
        }
        case 58: {
          if (timeRefund_ == null) {
            TimeRefund = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeRefund);
          break;
        }
        case 64: {
          IsEndTour = input.ReadBool();
          break;
        }
        case 72: {
          IsClaim = input.ReadInt32();
          break;
        }
        case 82: {
          if (user_ == null) {
            User = new global::ListHcPlayHistoryUserProto();
          }
          input.ReadMessage(User);
          break;
        }
        case 90: {
          if (fee_ == null) {
            Fee = new global::Fee();
          }
          input.ReadMessage(Fee);
          break;
        }
        case 98: {
          if (reward_ == null) {
            Reward = new global::ListReward();
          }
          input.ReadMessage(Reward);
          break;
        }
        case 104: {
          IdHistory = input.ReadInt32();
          break;
        }
        case 112: {
          RoomId = input.ReadInt64();
          break;
        }
        case 120: {
          TournamentTop = input.ReadInt64();
          break;
        }
        case 130: {
          HcGroupRoomId = input.ReadString();
          break;
        }
        case 136: {
          MiniGameEventId = input.ReadInt64();
          break;
        }
        case 144: {
          NumberPlayer = input.ReadInt32();
          break;
        }
        case 152: {
          NumberPlayerNow = input.ReadInt32();
          break;
        }
        case 162: {
          MiniGameName = input.ReadString();
          break;
        }
        case 170: {
          ModeName = input.ReadString();
          break;
        }
        case 176: {
          IsRefund = input.ReadBool();
          break;
        }
        case 184: {
          IsUserInEvent = input.ReadBool();
          break;
        }
        case 192: {
          IsEventTime = input.ReadBool();
          break;
        }
        case 202: {
          if (timeNowServer_ == null) {
            TimeNowServer = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          input.ReadMessage(TimeNowServer);
          break;
        }
        case 208: {
          ReceiveRefund = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class HcPlayHistoryUserProto : pb::IMessage<HcPlayHistoryUserProto>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<HcPlayHistoryUserProto> _parser = new pb::MessageParser<HcPlayHistoryUserProto>(() => new HcPlayHistoryUserProto());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<HcPlayHistoryUserProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::HcPlayHistoryProtoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public HcPlayHistoryUserProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public HcPlayHistoryUserProto(HcPlayHistoryUserProto other) : this() {
    avatarUser_ = other.avatarUser_;
    userName_ = other.userName_;
    score_ = other.score_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public HcPlayHistoryUserProto Clone() {
    return new HcPlayHistoryUserProto(this);
  }

  /// <summary>Field number for the "avatarUser" field.</summary>
  public const int AvatarUserFieldNumber = 1;
  private string avatarUser_ = "";
  /// <summary>
  ///avatar user
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AvatarUser {
    get { return avatarUser_; }
    set {
      avatarUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "userName" field.</summary>
  public const int UserNameFieldNumber = 2;
  private string userName_ = "";
  /// <summary>
  ///userId
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 3;
  private long score_;
  /// <summary>
  ///diem cua nguoi choi
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as HcPlayHistoryUserProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(HcPlayHistoryUserProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarUser != other.AvatarUser) return false;
    if (UserName != other.UserName) return false;
    if (Score != other.Score) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarUser.Length != 0) hash ^= AvatarUser.GetHashCode();
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    if (Score != 0L) hash ^= Score.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (AvatarUser.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AvatarUser);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserName);
    }
    if (Score != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Score);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (AvatarUser.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AvatarUser);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserName);
    }
    if (Score != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Score);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (AvatarUser.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUser);
    }
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    if (Score != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(HcPlayHistoryUserProto other) {
    if (other == null) {
      return;
    }
    if (other.AvatarUser.Length != 0) {
      AvatarUser = other.AvatarUser;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
    if (other.Score != 0L) {
      Score = other.Score;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AvatarUser = input.ReadString();
          break;
        }
        case 18: {
          UserName = input.ReadString();
          break;
        }
        case 24: {
          Score = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          AvatarUser = input.ReadString();
          break;
        }
        case 18: {
          UserName = input.ReadString();
          break;
        }
        case 24: {
          Score = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ListHcPlayHistoryUserProto : pb::IMessage<ListHcPlayHistoryUserProto>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ListHcPlayHistoryUserProto> _parser = new pb::MessageParser<ListHcPlayHistoryUserProto>(() => new ListHcPlayHistoryUserProto());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ListHcPlayHistoryUserProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::HcPlayHistoryProtoReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ListHcPlayHistoryUserProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ListHcPlayHistoryUserProto(ListHcPlayHistoryUserProto other) : this() {
    listHcPlayHistoryUserProto_ = other.listHcPlayHistoryUserProto_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ListHcPlayHistoryUserProto Clone() {
    return new ListHcPlayHistoryUserProto(this);
  }

  /// <summary>Field number for the "listHcPlayHistoryUserProto" field.</summary>
  public const int ListHcPlayHistoryUserProto_FieldNumber = 1;
  private static readonly pb::FieldCodec<global::HcPlayHistoryUserProto> _repeated_listHcPlayHistoryUserProto_codec
      = pb::FieldCodec.ForMessage(10, global::HcPlayHistoryUserProto.Parser);
  private readonly pbc::RepeatedField<global::HcPlayHistoryUserProto> listHcPlayHistoryUserProto_ = new pbc::RepeatedField<global::HcPlayHistoryUserProto>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::HcPlayHistoryUserProto> ListHcPlayHistoryUserProto_ {
    get { return listHcPlayHistoryUserProto_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ListHcPlayHistoryUserProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ListHcPlayHistoryUserProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!listHcPlayHistoryUserProto_.Equals(other.listHcPlayHistoryUserProto_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= listHcPlayHistoryUserProto_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    listHcPlayHistoryUserProto_.WriteTo(output, _repeated_listHcPlayHistoryUserProto_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    listHcPlayHistoryUserProto_.WriteTo(ref output, _repeated_listHcPlayHistoryUserProto_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += listHcPlayHistoryUserProto_.CalculateSize(_repeated_listHcPlayHistoryUserProto_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ListHcPlayHistoryUserProto other) {
    if (other == null) {
      return;
    }
    listHcPlayHistoryUserProto_.Add(other.listHcPlayHistoryUserProto_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          listHcPlayHistoryUserProto_.AddEntriesFrom(input, _repeated_listHcPlayHistoryUserProto_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          listHcPlayHistoryUserProto_.AddEntriesFrom(ref input, _repeated_listHcPlayHistoryUserProto_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ListHcPlayHistoryProto : pb::IMessage<ListHcPlayHistoryProto>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ListHcPlayHistoryProto> _parser = new pb::MessageParser<ListHcPlayHistoryProto>(() => new ListHcPlayHistoryProto());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ListHcPlayHistoryProto> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::HcPlayHistoryProtoReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ListHcPlayHistoryProto() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ListHcPlayHistoryProto(ListHcPlayHistoryProto other) : this() {
    listHcPlayHistoryProto_ = other.listHcPlayHistoryProto_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ListHcPlayHistoryProto Clone() {
    return new ListHcPlayHistoryProto(this);
  }

  /// <summary>Field number for the "listHcPlayHistoryProto" field.</summary>
  public const int ListHcPlayHistoryProto_FieldNumber = 1;
  private static readonly pb::FieldCodec<global::HcPlayHistoryProto> _repeated_listHcPlayHistoryProto_codec
      = pb::FieldCodec.ForMessage(10, global::HcPlayHistoryProto.Parser);
  private readonly pbc::RepeatedField<global::HcPlayHistoryProto> listHcPlayHistoryProto_ = new pbc::RepeatedField<global::HcPlayHistoryProto>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::HcPlayHistoryProto> ListHcPlayHistoryProto_ {
    get { return listHcPlayHistoryProto_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ListHcPlayHistoryProto);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ListHcPlayHistoryProto other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!listHcPlayHistoryProto_.Equals(other.listHcPlayHistoryProto_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= listHcPlayHistoryProto_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    listHcPlayHistoryProto_.WriteTo(output, _repeated_listHcPlayHistoryProto_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    listHcPlayHistoryProto_.WriteTo(ref output, _repeated_listHcPlayHistoryProto_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += listHcPlayHistoryProto_.CalculateSize(_repeated_listHcPlayHistoryProto_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ListHcPlayHistoryProto other) {
    if (other == null) {
      return;
    }
    listHcPlayHistoryProto_.Add(other.listHcPlayHistoryProto_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          listHcPlayHistoryProto_.AddEntriesFrom(input, _repeated_listHcPlayHistoryProto_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          listHcPlayHistoryProto_.AddEntriesFrom(ref input, _repeated_listHcPlayHistoryProto_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
